<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Closet of CoeusITE - Post</title><link href="https://lettuce.schwarzdot.eu.org/" rel="alternate"></link><link href="https://lettuce.schwarzdot.eu.org/feeds/post.atom.xml" rel="self"></link><id>https://lettuce.schwarzdot.eu.org/</id><updated>2017-04-28T00:00:00+08:00</updated><entry><title>在新 Dedibox 上部署 Docker</title><link href="https://lettuce.schwarzdot.eu.org/Docker%20Containers%20on%20My%20Dedibox.html" rel="alternate"></link><published>2016-09-27T00:00:00+08:00</published><updated>2017-04-28T00:00:00+08:00</updated><author><name>CoeusITE</name></author><id>tag:lettuce.schwarzdot.eu.org,2016-09-27:/Docker Containers on My Dedibox.html</id><summary type="html">&lt;p&gt;在 Dedibox 上部署 Docker 全记录&lt;/p&gt;</summary><content type="html">&lt;p&gt;刚刚 Online.net 又开卖 Limited Dediboxes，虽然这次很没诚意，但我还是买了个 C2750/1TB 的。
买后犹豫再三，还是安装了 Fedora 24 而非 Centos 7 或 Debian 8，原因大约是 Fedora 更新快。&lt;/p&gt;
&lt;p&gt;后来，Online.net 又开卖 Limited Dediboxes，没忍住换了一个E3/2TB的，系统更新为 Fedora 25。&lt;/p&gt;
&lt;p&gt;言归正传，下面开始部署 Docker。&lt;/p&gt;
&lt;h1&gt;Docker 安装&lt;/h1&gt;
&lt;p&gt;Check https://fedoraproject.org/wiki/Docker for details!&lt;/p&gt;
&lt;p&gt;首先更新个系统:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo dnf -y update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后安装 Docker，并设置好开机启动顺便启动 Docker:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo dnf -y install docker
sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; --now docker
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试下 Docker 是否正常运行:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker info
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后建立用于自动启动 Docker Container 的 Systemd Service 文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo tee /etc/systemd/system/docker@.service &lt;span class="s"&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;[Unit]&lt;/span&gt;
&lt;span class="s"&gt;Description=General systemd service profile for one docker container&lt;/span&gt;
&lt;span class="s"&gt;Requires=docker.service&lt;/span&gt;
&lt;span class="s"&gt;After=docker.service&lt;/span&gt;

&lt;span class="s"&gt;[Service]&lt;/span&gt;
&lt;span class="s"&gt;Restart=always&lt;/span&gt;
&lt;span class="s"&gt;ExecStart=/usr/bin/docker start -a %i&lt;/span&gt;
&lt;span class="s"&gt;ExecStop=/usr/bin/docker stop -t 2 %i&lt;/span&gt;

&lt;span class="s"&gt;[Install]&lt;/span&gt;
&lt;span class="s"&gt;WantedBy=multi-user.target&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装各个应用&lt;/h2&gt;
&lt;p&gt;显示目前运行的容器:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker info
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;显示现有的全部容器:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo docker info -a
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装 Nginx Proxy 和 Lets-Encrypt&lt;/h2&gt;
&lt;p&gt;Check https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion for details！&lt;/p&gt;
&lt;p&gt;&lt;em&gt;下列操作均由 root 用户完成。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;1) 首先弄个 Docker 设置目录，建立 docker 用戶組，並添加你的管理員帳號到 docker 組&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /etc/docker/certs
chmod &lt;span class="m"&gt;700&lt;/span&gt; /etc/docker/certs

groupadd docker
usermod -a -G docker YOUR_ADMIN_ACCOUNT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2) 然后下载 Nginx 的模板文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://github.com/jwilder/nginx-proxy/raw/master/nginx.tmpl -O /etc/docker/nginx.tmpl
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3) 新建一個 bridge 網絡，並新建一个官方的 Nginx Container，用于实际运行 Nginx&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker network create --subnet&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;172&lt;/span&gt;.23.39.0/24 nginx-proxy

docker run -d -p &lt;span class="m"&gt;80&lt;/span&gt;:80 -p &lt;span class="m"&gt;443&lt;/span&gt;:443 &lt;span class="se"&gt;\&lt;/span&gt;
    --name nginx --network nginx-proxy &lt;span class="se"&gt;\&lt;/span&gt;
    -v /etc/nginx/conf.d  &lt;span class="se"&gt;\&lt;/span&gt;
    -v /etc/nginx/vhost.d &lt;span class="se"&gt;\&lt;/span&gt;
    -v /usr/share/nginx/html &lt;span class="se"&gt;\&lt;/span&gt;
    -v /etc/docker/certs:/etc/nginx/certs:ro &lt;span class="se"&gt;\&lt;/span&gt;
    nginx
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4) 运行一个 docker-gen Container，用于设置 Nginx 的配置文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -d &lt;span class="se"&gt;\&lt;/span&gt;
    --name nginx-gen --network nginx-proxy &lt;span class="se"&gt;\&lt;/span&gt;
    --volumes-from nginx &lt;span class="se"&gt;\&lt;/span&gt;
    -v /etc/docker/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro &lt;span class="se"&gt;\&lt;/span&gt;
    -v /var/run/docker.sock:/tmp/docker.sock:ro &lt;span class="se"&gt;\&lt;/span&gt;
    jwilder/docker-gen &lt;span class="se"&gt;\&lt;/span&gt;
    -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5) 运行用于生成 Lets-Encrypt 证书的 letsencrypt-nginx-proxy-companion Container&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -d &lt;span class="se"&gt;\&lt;/span&gt;
    --name nginx-letsencrypt --network nginx-proxy &lt;span class="se"&gt;\&lt;/span&gt;
    -e &lt;span class="s2"&gt;&amp;quot;NGINX_DOCKER_GEN_CONTAINER=nginx-gen&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    --volumes-from nginx &lt;span class="se"&gt;\&lt;/span&gt;
    -v /etc/docker/certs:/etc/nginx/certs:rw &lt;span class="se"&gt;\&lt;/span&gt;
    -v /var/run/docker.sock:/var/run/docker.sock:ro &lt;span class="se"&gt;\&lt;/span&gt;
    jrcs/letsencrypt-nginx-proxy-companion
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6) 开启 firewalld 端口：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;firewall-cmd --add-service&lt;span class="o"&gt;=&lt;/span&gt;https --add-service&lt;span class="o"&gt;=&lt;/span&gt;http --permanent
firewall-cmd --reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;7) 开启开机启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tee /etc/systemd/system/docker@nginx-gen.service &lt;span class="s"&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;[Unit]&lt;/span&gt;
&lt;span class="s"&gt;Description=General systemd service profile for one docker container&lt;/span&gt;
&lt;span class="s"&gt;Requires=docker.service docker@nginx.service&lt;/span&gt;
&lt;span class="s"&gt;After=docker.service&lt;/span&gt;

&lt;span class="s"&gt;[Service]&lt;/span&gt;
&lt;span class="s"&gt;Restart=always&lt;/span&gt;
&lt;span class="s"&gt;ExecStart=/usr/bin/docker start -a nginx-gen&lt;/span&gt;
&lt;span class="s"&gt;ExecStop=/usr/bin/docker stop -t 2 nginx-gen&lt;/span&gt;

&lt;span class="s"&gt;[Install]&lt;/span&gt;
&lt;span class="s"&gt;WantedBy=multi-user.target&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

tee /etc/systemd/system/docker@nginx-letsencrypt.service &lt;span class="s"&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;[Unit]&lt;/span&gt;
&lt;span class="s"&gt;Description=General systemd service profile for one docker container&lt;/span&gt;
&lt;span class="s"&gt;Requires=docker.service docker@nginx.service docker@nginx-gen.service&lt;/span&gt;
&lt;span class="s"&gt;After=docker.service&lt;/span&gt;

&lt;span class="s"&gt;[Service]&lt;/span&gt;
&lt;span class="s"&gt;Restart=always&lt;/span&gt;
&lt;span class="s"&gt;ExecStart=/usr/bin/docker start -a nginx-letsencrypt&lt;/span&gt;
&lt;span class="s"&gt;ExecStop=/usr/bin/docker stop -t 2 nginx-letsencrypt&lt;/span&gt;

&lt;span class="s"&gt;[Install]&lt;/span&gt;
&lt;span class="s"&gt;WantedBy=multi-user.target&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; docker@nginx
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; docker@nginx-gen
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; docker@nginx-letsencrypt
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装 Transmission (作为 Seedbox)&lt;/h2&gt;
&lt;p&gt;建立 Transmission 目录&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir -p /opt/transmission
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;运行 Docker Container (Transmission 2.9.2 based on Debian:Stretch)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it --name transmission -p &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:9091:9091 &lt;span class="se"&gt;\&lt;/span&gt;
            --network nginx-proxy &lt;span class="se"&gt;\&lt;/span&gt;
            -p &lt;span class="m"&gt;51413&lt;/span&gt;:51413/tcp -p &lt;span class="m"&gt;51413&lt;/span&gt;:51413/udp &lt;span class="se"&gt;\&lt;/span&gt;
            -v /opt/transmission:/var/lib/transmission-daemon &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;TR_PEX_ENABLED=false&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;TR_LPD_ENABLED=false&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;TR_DHT_ENABLED=false&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;TR_DOWNLOAD_DIR=/var/lib/transmission-daemon/downloads&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;TR_INCOMPLETE_DIR=/var/lib/transmission-daemon/incomplete&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;TR_INCOMPLETE_DIR_ENABLED=true&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;TRUSER=&amp;lt;Your Username for Auth&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;TRPASSWD=&amp;lt;Your Passcode for Auth&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;VIRTUAL_HOST=&amp;lt;your.host.name&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;VIRTUAL_PORT=9091&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;LETSENCRYPT_HOST=&amp;lt;your.host.name&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;LETSENCRYPT_EMAIL=your@email&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -d coeusite/docker-transmission
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;注意自己设置域名(VIRTUAL_HOST &amp;amp; LETSENCRYPT_HOST)、邮箱(LETSENCRYPT_EMAIL)、用户名(TRUSER)和密码(TRPASSWD)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;安装 https://github.com/ronggang/transmission-web-control[Transmission Web Control]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; transmission /root/install-tr-web-control.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;开启 firewalld 端口：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;firewall-cmd --add-port&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;51413&lt;/span&gt;/tcp --add-port&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;51413&lt;/span&gt;/udp --permanent
firewall-cmd --reload
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;开启开机启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; docker@transmission
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;安装 Seafile (作为私有云)&lt;/h2&gt;
&lt;p&gt;详见 https://github.com/coeusite/docker-seafile&lt;/p&gt;
&lt;p&gt;建立后台 MariaDB 数据库&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker volume create --name seafile-dbstore

docker run -d -p &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:3306:3306 &lt;span class="se"&gt;\&lt;/span&gt;
  --network nginx-proxy --ip &lt;span class="m"&gt;172&lt;/span&gt;.23.39.98 &lt;span class="se"&gt;\&lt;/span&gt;
  -v seafile-dbstore:/var/lib/mysql:rw &lt;span class="se"&gt;\&lt;/span&gt;
  -e &lt;span class="nv"&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;password&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
  -e &lt;span class="nv"&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;seafile &lt;span class="se"&gt;\&lt;/span&gt;
  -e &lt;span class="nv"&gt;MYSQL_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;seafile &lt;span class="se"&gt;\&lt;/span&gt;
  -e &lt;span class="nv"&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;password&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
  --name seafile-db mariadb:latest
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;建立 Seafile 数据 Container&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it --dns&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 &lt;span class="se"&gt;\&lt;/span&gt;
  --network nginx-proxy --ip &lt;span class="m"&gt;172&lt;/span&gt;.23.39.99 &lt;span class="se"&gt;\&lt;/span&gt;
  -e &lt;span class="nv"&gt;SEAFILE_DOMAIN_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;YOUR.HOST.NAME&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
  --name seafile-data coeusite/docker-seafile:latest  bootstrap
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;建立 Seafile 运行 Container&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -d -t --dns&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1 -p &lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:8080:8080 &lt;span class="se"&gt;\&lt;/span&gt;
            --network nginx-proxy --ip &lt;span class="m"&gt;172&lt;/span&gt;.23.39.99 &lt;span class="se"&gt;\&lt;/span&gt;
            --volumes-from seafile-data &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="nv"&gt;SEAFILE_DOMAIN_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;YOUR.HOST.NAME&amp;gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;VIRTUAL_HOST=&amp;lt;YOUR.HOST.NAME&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;VIRTUAL_PORT=8080&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;VIRTUAL_PROTO=https&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;LETSENCRYPT_HOST=&amp;lt;YOUR.HOST.NAME&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            -e &lt;span class="s2"&gt;&amp;quot;LETSENCRYPT_EMAIL=&amp;lt;YOUR@EMAIL&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
            --name seafile coeusite/docker-seafile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后就可以通过 https://&lt;YOUR.HOST.NAME&gt; 访问 Seafile 了！
不过现在还需要去后台修正一下端口，从8080修改为443。&lt;/p&gt;
&lt;p&gt;开启开机启动：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tee /etc/systemd/system/docker@seafile.service &lt;span class="s"&gt;&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;[Unit]&lt;/span&gt;
&lt;span class="s"&gt;Description=General systemd service profile for one docker container&lt;/span&gt;
&lt;span class="s"&gt;Requires=docker.service docker@seafile-db.service&lt;/span&gt;
&lt;span class="s"&gt;After=docker.service&lt;/span&gt;

&lt;span class="s"&gt;[Service]&lt;/span&gt;
&lt;span class="s"&gt;Restart=always&lt;/span&gt;
&lt;span class="s"&gt;ExecStart=/usr/bin/docker start -a seafile&lt;/span&gt;
&lt;span class="s"&gt;ExecStop=/usr/bin/docker stop -t 2 seafile&lt;/span&gt;

&lt;span class="s"&gt;[Install]&lt;/span&gt;
&lt;span class="s"&gt;WantedBy=multi-user.target&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; docker@seafile-db
systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; docker@seafile
&lt;/pre&gt;&lt;/div&gt;</content><category term="Docker"></category><category term="Dedibox"></category><category term="Online.net"></category><category term="Transmission"></category><category term="Seafile"></category><category term="Lets-Encrypt"></category></entry></feed>